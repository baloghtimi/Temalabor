/**
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.myDsl.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.myDsl.Camp;
import org.xtext.example.mydsl.myDsl.CardSenior;
import org.xtext.example.mydsl.myDsl.Color;
import org.xtext.example.mydsl.myDsl.ColorSenior;
import org.xtext.example.mydsl.myDsl.MyDslPackage;
import org.xtext.example.mydsl.myDsl.RoomSenior;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Camp</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CampImpl#getName <em>Name</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CampImpl#getColorseniors <em>Colorseniors</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CampImpl#getCardseniors <em>Cardseniors</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CampImpl#getRoomseniors <em>Roomseniors</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.myDsl.impl.CampImpl#getColors <em>Colors</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CampImpl extends MinimalEObjectImpl.Container implements Camp
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getColorseniors() <em>Colorseniors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColorseniors()
   * @generated
   * @ordered
   */
  protected EList<ColorSenior> colorseniors;

  /**
   * The cached value of the '{@link #getCardseniors() <em>Cardseniors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardseniors()
   * @generated
   * @ordered
   */
  protected EList<CardSenior> cardseniors;

  /**
   * The cached value of the '{@link #getRoomseniors() <em>Roomseniors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRoomseniors()
   * @generated
   * @ordered
   */
  protected EList<RoomSenior> roomseniors;

  /**
   * The cached value of the '{@link #getColors() <em>Colors</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getColors()
   * @generated
   * @ordered
   */
  protected EList<Color> colors;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CampImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.CAMP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.CAMP__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<ColorSenior> getColorseniors()
  {
    if (colorseniors == null)
    {
      colorseniors = new EObjectContainmentEList<ColorSenior>(ColorSenior.class, this, MyDslPackage.CAMP__COLORSENIORS);
    }
    return colorseniors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<CardSenior> getCardseniors()
  {
    if (cardseniors == null)
    {
      cardseniors = new EObjectContainmentEList<CardSenior>(CardSenior.class, this, MyDslPackage.CAMP__CARDSENIORS);
    }
    return cardseniors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<RoomSenior> getRoomseniors()
  {
    if (roomseniors == null)
    {
      roomseniors = new EObjectContainmentEList<RoomSenior>(RoomSenior.class, this, MyDslPackage.CAMP__ROOMSENIORS);
    }
    return roomseniors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Color> getColors()
  {
    if (colors == null)
    {
      colors = new EObjectContainmentEList<Color>(Color.class, this, MyDslPackage.CAMP__COLORS);
    }
    return colors;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case MyDslPackage.CAMP__COLORSENIORS:
        return ((InternalEList<?>)getColorseniors()).basicRemove(otherEnd, msgs);
      case MyDslPackage.CAMP__CARDSENIORS:
        return ((InternalEList<?>)getCardseniors()).basicRemove(otherEnd, msgs);
      case MyDslPackage.CAMP__ROOMSENIORS:
        return ((InternalEList<?>)getRoomseniors()).basicRemove(otherEnd, msgs);
      case MyDslPackage.CAMP__COLORS:
        return ((InternalEList<?>)getColors()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.CAMP__NAME:
        return getName();
      case MyDslPackage.CAMP__COLORSENIORS:
        return getColorseniors();
      case MyDslPackage.CAMP__CARDSENIORS:
        return getCardseniors();
      case MyDslPackage.CAMP__ROOMSENIORS:
        return getRoomseniors();
      case MyDslPackage.CAMP__COLORS:
        return getColors();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.CAMP__NAME:
        setName((String)newValue);
        return;
      case MyDslPackage.CAMP__COLORSENIORS:
        getColorseniors().clear();
        getColorseniors().addAll((Collection<? extends ColorSenior>)newValue);
        return;
      case MyDslPackage.CAMP__CARDSENIORS:
        getCardseniors().clear();
        getCardseniors().addAll((Collection<? extends CardSenior>)newValue);
        return;
      case MyDslPackage.CAMP__ROOMSENIORS:
        getRoomseniors().clear();
        getRoomseniors().addAll((Collection<? extends RoomSenior>)newValue);
        return;
      case MyDslPackage.CAMP__COLORS:
        getColors().clear();
        getColors().addAll((Collection<? extends Color>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CAMP__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyDslPackage.CAMP__COLORSENIORS:
        getColorseniors().clear();
        return;
      case MyDslPackage.CAMP__CARDSENIORS:
        getCardseniors().clear();
        return;
      case MyDslPackage.CAMP__ROOMSENIORS:
        getRoomseniors().clear();
        return;
      case MyDslPackage.CAMP__COLORS:
        getColors().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.CAMP__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyDslPackage.CAMP__COLORSENIORS:
        return colorseniors != null && !colorseniors.isEmpty();
      case MyDslPackage.CAMP__CARDSENIORS:
        return cardseniors != null && !cardseniors.isEmpty();
      case MyDslPackage.CAMP__ROOMSENIORS:
        return roomseniors != null && !roomseniors.isEmpty();
      case MyDslPackage.CAMP__COLORS:
        return colors != null && !colors.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //CampImpl
